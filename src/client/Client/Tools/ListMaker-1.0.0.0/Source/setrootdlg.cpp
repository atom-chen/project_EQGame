/////////////////////////////////////////////////////////////////////////////
// Name:        setrootdlg.cpp
// Purpose:     
// Author:      xj
// Modified by: 
// Created:     19/11/2010 10:36:01
// RCS-ID:      
// Copyright:   XJ-1
// Licence:     
/////////////////////////////////////////////////////////////////////////////

// Generated by DialogBlocks (unregistered), 19/11/2010 10:36:01

// For compilers that support precompilation, includes "wx/wx.h".
#include "wx/wxprec.h"
#include "wx/dirdlg.h"

#ifdef __BORLANDC__
#pragma hdrstop
#endif

#ifndef WX_PRECOMP
#include "wx/wx.h"
#endif

////@begin includes
////@end includes

#include "setrootdlg.h"

////@begin XPM images
////@end XPM images


/*
 * SetRootDlg type definition
 */

IMPLEMENT_DYNAMIC_CLASS( SetRootDlg, wxDialog )


/*
 * SetRootDlg event table definition
 */

BEGIN_EVENT_TABLE( SetRootDlg, wxDialog )

////@begin SetRootDlg event table entries
    EVT_BUTTON( ID_BTN_DIR, SetRootDlg::OnBtnDirClick )

    EVT_BUTTON( ID_BTN_OK, SetRootDlg::OnBtnOkClick )

    EVT_BUTTON( ID_BTN_CANCEL, SetRootDlg::OnBtnCancelClick )

////@end SetRootDlg event table entries

END_EVENT_TABLE()


/*
 * SetRootDlg constructors
 */

SetRootDlg::SetRootDlg()
{
    Init();
}

SetRootDlg::SetRootDlg( wxWindow* parent, wxWindowID id, const wxString& caption, const wxPoint& pos, const wxSize& size, long style )
{
    Init();
    Create(parent, id, caption, pos, size, style);
}


/*
 * SetRootDlg creator
 */

bool SetRootDlg::Create( wxWindow* parent, wxWindowID id, const wxString& caption, const wxPoint& pos, const wxSize& size, long style )
{
////@begin SetRootDlg creation
    SetExtraStyle(wxWS_EX_BLOCK_EVENTS);
    wxDialog::Create( parent, id, caption, pos, size, style );

    CreateControls();
    if (GetSizer())
    {
        GetSizer()->SetSizeHints(this);
    }
    Centre();
////@end SetRootDlg creation
    return true;
}


/*
 * SetRootDlg destructor
 */

SetRootDlg::~SetRootDlg()
{
////@begin SetRootDlg destruction
////@end SetRootDlg destruction
}


/*
 * Member initialisation
 */

void SetRootDlg::Init()
{
////@begin SetRootDlg member initialisation
    m_txtDir = NULL;
////@end SetRootDlg member initialisation
}


/*
 * Control creation for SetRootDlg
 */

void SetRootDlg::CreateControls()
{    
////@begin SetRootDlg content construction
    // Generated by DialogBlocks, 19/11/2010 10:47:55 (unregistered)

    SetRootDlg* itemDialog1 = this;

    wxBoxSizer* itemBoxSizer2 = new wxBoxSizer(wxVERTICAL);
    itemDialog1->SetSizer(itemBoxSizer2);

    wxBoxSizer* itemBoxSizer3 = new wxBoxSizer(wxHORIZONTAL);
    itemBoxSizer2->Add(itemBoxSizer3, 0, wxGROW|wxALL, 5);

    wxStaticText* itemStaticText4 = new wxStaticText( itemDialog1, wxID_STATIC, wxGetTranslation(wxString() + (wxChar) 0x6839 + (wxChar) 0x76EE + (wxChar) 0x5F55 + (wxChar) 0xFF1A), wxDefaultPosition, wxDefaultSize, 0 );
    itemBoxSizer3->Add(itemStaticText4, 0, wxALIGN_CENTER_VERTICAL|wxALL, 5);

    m_txtDir = new wxTextCtrl( itemDialog1, ID_TXT_DIR, wxEmptyString, wxDefaultPosition, wxSize(400, -1), 0 );
    itemBoxSizer3->Add(m_txtDir, 1, wxALIGN_CENTER_VERTICAL|wxALL, 5);

    wxBoxSizer* itemBoxSizer6 = new wxBoxSizer(wxHORIZONTAL);
    itemBoxSizer2->Add(itemBoxSizer6, 0, wxALIGN_RIGHT|wxALL, 5);

    wxButton* itemButton7 = new wxButton( itemDialog1, ID_BTN_DIR, wxGetTranslation(wxString() + (wxChar) 0x6D4F + (wxChar) 0x89C8), wxDefaultPosition, wxDefaultSize, 0 );
    itemBoxSizer6->Add(itemButton7, 0, wxALIGN_CENTER_VERTICAL|wxALL, 5);

    wxButton* itemButton8 = new wxButton( itemDialog1, ID_BTN_OK, wxGetTranslation(wxString() + (wxChar) 0x786E + (wxChar) 0x5B9A), wxDefaultPosition, wxDefaultSize, 0 );
	itemButton8->SetDefault();
    itemBoxSizer6->Add(itemButton8, 0, wxALIGN_CENTER_VERTICAL|wxALL, 5);

    wxButton* itemButton9 = new wxButton( itemDialog1, ID_BTN_CANCEL, wxGetTranslation(wxString() + (wxChar) 0x53D6 + (wxChar) 0x6D88), wxDefaultPosition, wxDefaultSize, 0 );
    itemBoxSizer6->Add(itemButton9, 0, wxALIGN_CENTER_VERTICAL|wxALL, 5);

////@end SetRootDlg content construction
}


/*
 * Should we show tooltips?
 */

bool SetRootDlg::ShowToolTips()
{
    return true;
}

/*
 * Get bitmap resources
 */

wxBitmap SetRootDlg::GetBitmapResource( const wxString& name )
{
    // Bitmap retrieval
////@begin SetRootDlg bitmap retrieval
    wxUnusedVar(name);
    return wxNullBitmap;
////@end SetRootDlg bitmap retrieval
}

/*
 * Get icon resources
 */

wxIcon SetRootDlg::GetIconResource( const wxString& name )
{
    // Icon retrieval
////@begin SetRootDlg icon retrieval
    wxUnusedVar(name);
    return wxNullIcon;
////@end SetRootDlg icon retrieval
}


/*
 * wxEVT_COMMAND_BUTTON_CLICKED event handler for ID_BTN_DIR
 */

void SetRootDlg::OnBtnDirClick( wxCommandEvent& event )
{
	static wxString defaultPath = wxT("");

	wxDirDialog dialog(this, wxT(""),defaultPath,wxDD_NEW_DIR_BUTTON);

	if(wxID_OK == dialog.ShowModal())
	{
		wxString selPath = dialog.GetPath();

		defaultPath = selPath;

		int p = selPath.Last(wxT('\\'));
		if(p >= 0)
			selPath.Remove(0, p + 1);
		selPath.Append(wxT("/"));

		m_txtDir->SetValue(selPath);
	}

    event.Skip();
}


/*
 * wxEVT_COMMAND_BUTTON_CLICKED event handler for ID_BTN_OK
 */

void SetRootDlg::OnBtnOkClick( wxCommandEvent& event )
{
	EndModal(wxID_OK);

    event.Skip();
}


/*
 * wxEVT_COMMAND_BUTTON_CLICKED event handler for ID_BTN_CANCEL
 */

void SetRootDlg::OnBtnCancelClick( wxCommandEvent& event )
{
	EndModal(wxID_CANCEL);

    event.Skip();
}

