/////////////////////////////////////////////////////////////////////////////
// Name:        addgroupdlg.cpp
// Purpose:     
// Author:      xj
// Modified by: 
// Created:     19/11/2010 10:52:19
// RCS-ID:      
// Copyright:   XJ-1
// Licence:     
/////////////////////////////////////////////////////////////////////////////

// Generated by DialogBlocks (unregistered), 19/11/2010 10:52:19

// For compilers that support precompilation, includes "wx/wx.h".
#include "wx/wxprec.h"

#ifdef __BORLANDC__
#pragma hdrstop
#endif

#ifndef WX_PRECOMP
#include "wx/wx.h"
#endif

////@begin includes
////@end includes

#include "addgroupdlg.h"

////@begin XPM images
////@end XPM images


/*
 * AddGroupDlg type definition
 */

IMPLEMENT_DYNAMIC_CLASS( AddGroupDlg, wxDialog )


/*
 * AddGroupDlg event table definition
 */

BEGIN_EVENT_TABLE( AddGroupDlg, wxDialog )

////@begin AddGroupDlg event table entries
    EVT_BUTTON( ID_BTN_BROWSER, AddGroupDlg::OnBtnBrowserClick )

    EVT_BUTTON( ID_BTN_OK, AddGroupDlg::OnBtnOkClick )

    EVT_BUTTON( ID_BTN_CANCEL, AddGroupDlg::OnBtnCancelClick )

////@end AddGroupDlg event table entries

END_EVENT_TABLE()


/*
 * AddGroupDlg constructors
 */

AddGroupDlg::AddGroupDlg()
{
    Init();
}

AddGroupDlg::AddGroupDlg( wxWindow* parent, wxWindowID id, const wxString& caption, const wxPoint& pos, const wxSize& size, long style )
{
    Init();
    Create(parent, id, caption, pos, size, style);
}


/*
 * AddGroupDlg creator
 */

bool AddGroupDlg::Create( wxWindow* parent, wxWindowID id, const wxString& caption, const wxPoint& pos, const wxSize& size, long style )
{
////@begin AddGroupDlg creation
    SetExtraStyle(wxWS_EX_BLOCK_EVENTS);
    wxDialog::Create( parent, id, caption, pos, size, style );

    CreateControls();
    if (GetSizer())
    {
        GetSizer()->SetSizeHints(this);
    }
    Centre();
////@end AddGroupDlg creation
    return true;
}


/*
 * AddGroupDlg destructor
 */

AddGroupDlg::~AddGroupDlg()
{
////@begin AddGroupDlg destruction
////@end AddGroupDlg destruction
}


/*
 * Member initialisation
 */

void AddGroupDlg::Init()
{
////@begin AddGroupDlg member initialisation
    m_txtDir = NULL;
////@end AddGroupDlg member initialisation
}


/*
 * Control creation for AddGroupDlg
 */

void AddGroupDlg::CreateControls()
{    
////@begin AddGroupDlg content construction
    // Generated by DialogBlocks, 19/11/2010 15:21:16 (unregistered)

	AddGroupDlg* itemDialog1 = this;

	wxBoxSizer* itemBoxSizer2 = new wxBoxSizer(wxVERTICAL);
	itemDialog1->SetSizer(itemBoxSizer2);

	wxBoxSizer* itemBoxSizer3 = new wxBoxSizer(wxHORIZONTAL);
	itemBoxSizer2->Add(itemBoxSizer3, 0, wxGROW|wxALL, 5);

	wxStaticText* itemStaticText4 = new wxStaticText( itemDialog1, wxID_STATIC, wxGetTranslation(wxString() + (wxChar) 0x7EC4 + (wxChar) 0x76EE + (wxChar) 0x5F55 + (wxChar) 0xFF1A), wxDefaultPosition, wxSize(50, -1), 0 );
	itemBoxSizer3->Add(itemStaticText4, 0, wxALIGN_CENTER_VERTICAL|wxALL, 5);

	m_txtDir = new wxTextCtrl( itemDialog1, ID_TXT_GDIR, wxEmptyString, wxDefaultPosition, wxSize(400, -1), 0 );
	itemBoxSizer3->Add(m_txtDir, 1, wxALIGN_CENTER_VERTICAL|wxALL, 5);

	wxBoxSizer* itemBoxSizer6 = new wxBoxSizer(wxHORIZONTAL);
	itemBoxSizer2->Add(itemBoxSizer6, 0, wxGROW|wxALL, 5);

	wxStaticText* itemStaticText7 = new wxStaticText( itemDialog1, wxID_STATIC, wxGetTranslation(wxString() + (wxChar) 0x7EC4 + (wxChar) 0x7C7B + (wxChar) 0x578B + (wxChar) 0xFF1A), wxDefaultPosition, wxSize(50, -1), 0 );
	itemBoxSizer6->Add(itemStaticText7, 0, wxALIGN_CENTER_VERTICAL|wxALL, 5);

	wxArrayString m_pCmbTypeStrings;
	m_pCmbTypeStrings.Add(_("GROUP_TYPE_DIR"));
	m_pCmbTypeStrings.Add(_("GROUP_TYPE_PACK"));
	m_pCmbType = new wxChoice( itemDialog1, ID_CHOICE, wxDefaultPosition, wxDefaultSize, m_pCmbTypeStrings, 0 );
	m_pCmbType->SetSelection(0);
	itemBoxSizer6->Add(m_pCmbType, 1, wxALIGN_CENTER_VERTICAL|wxALL, 5);

	wxBoxSizer* itemBoxSizer9 = new wxBoxSizer(wxHORIZONTAL);
	itemBoxSizer2->Add(itemBoxSizer9, 0, wxALIGN_RIGHT|wxALL, 5);

	wxButton* itemButton10 = new wxButton( itemDialog1, ID_BTN_BROWSER, wxGetTranslation(wxString() + (wxChar) 0x6D4F + (wxChar) 0x89C8), wxDefaultPosition, wxDefaultSize, 0 );
	itemBoxSizer9->Add(itemButton10, 0, wxALIGN_CENTER_VERTICAL|wxALL, 5);

	wxButton* itemButton11 = new wxButton( itemDialog1, ID_BTN_OK, wxGetTranslation(wxString() + (wxChar) 0x786E + (wxChar) 0x5B9A), wxDefaultPosition, wxDefaultSize, 0 );
	itemButton11->SetDefault();
	itemBoxSizer9->Add(itemButton11, 0, wxALIGN_CENTER_VERTICAL|wxALL, 5);

	wxButton* itemButton12 = new wxButton( itemDialog1, ID_BTN_CANCEL, wxGetTranslation(wxString() + (wxChar) 0x53D6 + (wxChar) 0x6D88), wxDefaultPosition, wxDefaultSize, 0 );
	itemBoxSizer9->Add(itemButton12, 0, wxALIGN_CENTER_VERTICAL|wxALL, 5);

////@end AddGroupDlg content construction
}


/*
 * Should we show tooltips?
 */

bool AddGroupDlg::ShowToolTips()
{
    return true;
}

/*
 * Get bitmap resources
 */

wxBitmap AddGroupDlg::GetBitmapResource( const wxString& name )
{
    // Bitmap retrieval
////@begin AddGroupDlg bitmap retrieval
    wxUnusedVar(name);
    return wxNullBitmap;
////@end AddGroupDlg bitmap retrieval
}

/*
 * Get icon resources
 */

wxIcon AddGroupDlg::GetIconResource( const wxString& name )
{
    // Icon retrieval
////@begin AddGroupDlg icon retrieval
    wxUnusedVar(name);
    return wxNullIcon;
////@end AddGroupDlg icon retrieval
}


/*
 * wxEVT_COMMAND_BUTTON_CLICKED event handler for ID_BTN_OK
 */

void AddGroupDlg::OnBtnOkClick( wxCommandEvent& event )
{
	EndModal(wxID_OK);

	event.Skip();
}


/*
 * wxEVT_COMMAND_BUTTON_CLICKED event handler for ID_BTN_CANCEL
 */

void AddGroupDlg::OnBtnCancelClick( wxCommandEvent& event )
{
	EndModal(wxID_CANCEL);

	event.Skip();
}


/*
 * wxEVT_COMMAND_BUTTON_CLICKED event handler for ID_BTN_BROWSER
 */

void AddGroupDlg::OnBtnBrowserClick( wxCommandEvent& event )
{
	static wxString defaultPath = wxT("");

	wxDirDialog dialog(this, wxT(""),defaultPath,wxDD_NEW_DIR_BUTTON);

	if(wxID_OK == dialog.ShowModal())
	{
		wxString selPath = dialog.GetPath();

		defaultPath = selPath;

		int p = selPath.Last(wxT('\\'));
		if(p >= 0)
			selPath.Remove(0, p + 1);
		selPath.Append(wxT("/"));

		m_txtDir->SetValue(selPath);
		
		//m_txtPath->SetValue(dialog.GetPath());
	}

	event.Skip();
}

